name: Release dsd

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: windows-x86_64
            target: x86_64-pc-windows-msvc
            file: dsd-windows-x86_64.exe

          - os: ubuntu-latest
            name: linux-x86_64
            target: x86_64-unknown-linux-gnu
            file: dsd-linux-x86_64

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Rust workspace
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Cargo build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Move target (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Move-Item -Path "target/${{ matrix.target }}/release/dsd.exe" -Destination "${{ matrix.file }}"

      - name: Move target (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mv target/${{ matrix.target }}/release/dsd ${{ matrix.file }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dsd-${{ matrix.name }}
          path: ${{ matrix.file }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dsd-*
          path: artifacts

      - name: Upload release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**
          draft: true
          generate_release_notes: true
          fail_on_unmatched_files: true

      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: "*"
